---
options:
    env:
        - TF_INPUT=false
steps:
    - id: 'Download additional configuration for Terraform'
      name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:$_CLOUD_SDK_IMAGE_TAG'
      entrypoint: gsutil
      dir: "$_TERRAFORM_ENVIRONMENT_PATH/.."
      args: ['-m', 'cp', '-r', 'gs://${PROJECT_ID}-configuration/terraform/$_TERRAFORM_ENVIRONMENT_PATH', '.']
    - id: 'tf init'
      name: 'hashicorp/terraform:$_TERRAFORM_IMAGE_TAG'
      entrypoint: 'sh'
      dir: "$_TERRAFORM_ENVIRONMENT_PATH"
      args:
          - '-c'
          - |
            echo "Contents of $(pwd): $(ls -al)"
            terraform init
    - id: 'tf validate'
      name: 'hashicorp/terraform:$_TERRAFORM_IMAGE_TAG'
      entrypoint: 'sh'
      dir: "$_TERRAFORM_ENVIRONMENT_PATH"
      args:
          - '-c'
          - |
            terraform validate
    - id: 'tf plan'
      name: 'hashicorp/terraform:$_TERRAFORM_IMAGE_TAG'
      entrypoint: 'sh'
      dir: "$_TERRAFORM_ENVIRONMENT_PATH"
      args:
          - '-c'
          - |
            terraform plan
    - id: 'tf apply'
      name: 'hashicorp/terraform:$_TERRAFORM_IMAGE_TAG'
      entrypoint: 'sh'
      dir: "$_TERRAFORM_ENVIRONMENT_PATH"
      args:
          - '-c'
          - |
            if [ "${BRANCH_NAME}" = "master" ]; then
                echo $BRANCH_NAME
                terraform apply -auto-approve
            else
                echo "Not applying any Terraform change. Not on master branch."
                echo "Current branch: $BRANCH_NAME"
            fi
substitutions:
  _CLOUD_SDK_IMAGE_TAG: 'alpine'
  _TERRAFORM_ENVIRONMENT_PATH: 'environments/prod'
  _TERRAFORM_IMAGE_TAG: '0.12.29'
