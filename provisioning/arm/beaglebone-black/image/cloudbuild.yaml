---
artifacts:
  objects:
    location: 'gs://${PROJECT_ID}-os-images/$_ROOTFS_ARCHIVE_PATH'
    paths:
      - './dist/*.xz'
      - './dist/*.sha256sum'
      - './dist/*.bmap'
options:
  machineType: 'N1_HIGHCPU_8'
steps:
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:$_CLOUD_SDK_IMAGE_TAG'
    entrypoint: gsutil
    args: ['-m', 'cp', '-r', 'gs://${PROJECT_ID}-configuration/terraform/$_TERRAFORM_ENVIRONMENT_PATH/consul-template', '.']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:$_CLOUD_SDK_IMAGE_TAG'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Creating the consul-template user"
        addgroup -g 1000 consul-template && \
        adduser -u 100 -S -G consul-template consul-template
        mkdir -p $_RENDERED_TEMPLATES_PATH
        chown -R consul-template:consul-template $_RENDERED_TEMPLATES_PATH
        echo "Contents of $(pwd): $(find "$(pwd)")"
  - name: 'hashicorp/consul-template:$_CONSUL_TEMPLATE_IMAGE_TAG'
    args:
      - '/bin/consul-template'
      - '-config'
      - 'consul-template/config.hcl'
      - '-once'
      - '-template'
      - 'templates/etc/connman/main.conf:$_RENDERED_TEMPLATES_PATH/etc/connman/main.conf'
      - '-template'
      - 'templates/usr/local/bin/start-mqtt-client.sh:$_RENDERED_TEMPLATES_PATH/usr/local/bin/start-mqtt-client.sh'
      - '-template'
      - 'templates/var/lib/connman/ethernet.config:$_RENDERED_TEMPLATES_PATH/var/lib/connman/ethernet.config'
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:$_CLOUD_SDK_IMAGE_TAG'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Contents of $(pwd): $(find "$(pwd)")"
  - id: 'Download rootfs archive and checksum'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:$_CLOUD_SDK_IMAGE_TAG'
    entrypoint: gsutil
    args: ['cp', 'gs://${PROJECT_ID}-os-images/$_ROOTFS_ARCHIVE_PATH/$_ROOTFS_ARCHIVE_NAME*', '.']
  - id: 'Build BeagleBone Black image'
    name: 'gcr.io/$PROJECT_ID/arm-image-builder:$_ARM_BUILDER_IMAGE_TAG'
    args:
      - "--entrypoint"
      - "$$(pwd)/build.sh"
      - "--options"
      - "--rootfs-archive-name $_ROOTFS_ARCHIVE_NAME"
  - id: 'Build BeagleBone Black flasher image'
    name: 'gcr.io/$PROJECT_ID/arm-image-builder:$_ARM_BUILDER_IMAGE_TAG'
    args:
      - "--entrypoint"
      - "$$(pwd)/build.sh"
      - "--options"
      - "--rootfs-archive-name $_ROOTFS_ARCHIVE_NAME --flasher"
substitutions:
  _ARM_BUILDER_IMAGE_TAG: '4a17db0'
  _BUILD_SCRIPT_REVISION: '442ff4a'
  _BUILD_SCRIPT_URL: 'https://github.com/RobertCNelson/omap-image-builder.git'
  _CLOUD_SDK_IMAGE_TAG: 'alpine'
  _CONSUL_TEMPLATE_IMAGE_TAG: '0.25.1-alpine'
  _RENDERED_TEMPLATES_PATH: './configuration'
  _ROOTFS_ARCHIVE_NAME: 'ubuntu-20.04.1-console-armhf-2020-10-13-bbb-init-b063b959e2a62df520254e96feae02c1d081e2b7.tar.xz'
  _ROOTFS_ARCHIVE_PATH: 'arm/armhf/beaglebone-black'
# Set a high timeout because the default is too low
timeout: 36000s
