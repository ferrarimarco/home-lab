---
options:
    env:
        - TF_INPUT=false
steps:
    - id: 'super-linter'
      name: "github/super-linter:v3.6.0"
      env:
        - ACTIONS_RUNNER_DEBUG=true
        - ANSIBLE_DIRECTORY=configuration/ansible
        - DEFAULT_WORKSPACE=/workspace
        - DISABLE_ERRORS=false
        - LINTER_RULES_PATH=/workspace
        # Disable multiple status reporting to avoid reporting any status
        # (see the if condition in super-linter/lib/linter.sh)
        - MULTI_STATUS=false
        - RUN_LOCAL=true
        - VALIDATE_ALL_CODEBASE=true
        - VALIDATE_ANSIBLE=true
        - VALIDATE_BASH=true
        - VALIDATE_DOCKER=true
        - VALIDATE_DOCKER_HADOLINT=true
        - VALIDATE_EDITORCONFIG=true
        - VALIDATE_JSON=true
        - VALIDATE_MD=true
        - VALIDATE_TERRAFORM=true
        - VALIDATE_TERRAFORM_TERRASCAN=true
        - VALIDATE_YAML=true
    - id: 'provision infrastructure'
      name: 'gcr.io/cloud-builders/gcloud'
      entrypoint: 'bash'
      args:
      - '-c'
      - |
        # File that contains failures.
        failure_file=failure.log
        touch ${failure_file}

        build_dir="provisioning/terraform"
        config="${build_dir}/cloudbuild.yaml"
        if [[ ! -f "${config}" ]]; then
          echo "${d} failed: ${config} not found." | tee -a ${failure_file}
          continue
        fi

        echo "Building $build_dir ... "
        logfile="${build_dir::-1}.log"
        gcloud builds submit $build_dir --config=${config} \
        --substitutions BRANCH_NAME="$BRANCH_NAME" \
        > ${logfile} 2>&1

        if [[ $? -ne 0 ]]; then
          echo "$build_dir failed" | tee -a ${failure_file}
          cat ${logfile}
        fi

        # Check if there is any failure.
        if [[ -s ${failure_file} ]]; then
          echo
          echo "Some builds failed:"
          cat ${failure_file}
          echo "Exiting."
          exit 1
        fi
        echo "Build succeeded."
    - id: 'build smart-desk'
      name: 'gcr.io/cloud-builders/gcloud'
      entrypoint: 'bash'
      args:
      - '-c'
      - |
        # File that contains failures.
        failure_file=failure.log
        touch ${failure_file}

        build_dir="provisioning/esp32/smart_desk"
        config="${build_dir}/cloudbuild.yaml"
        if [[ ! -f "${config}" ]]; then
          echo "${d} failed: ${config} not found." | tee -a ${failure_file}
          continue
        fi

        echo "Building $build_dir ... "
        logfile="${build_dir::-1}.log"
        gcloud builds submit $build_dir --config=${config} \
        --substitutions COMMIT_SHA="$COMMIT_SHA",BRANCH_NAME="$BRANCH_NAME",TAG_NAME="$TAG_NAME" \
        > ${logfile} 2>&1

        if [[ $? -ne 0 ]]; then
          echo "$build_dir failed" | tee -a ${failure_file}
          cat ${logfile}
        fi

        # Check if there is any failure.
        if [[ -s ${failure_file} ]]; then
          echo
          echo "Some builds failed:"
          cat ${failure_file}
          echo "Exiting."
          exit 1
        fi
        echo "Build succeeded."
tags: ['$PROJECT_ID', '$BUILD_ID', '$_PR_NUMBER', '$REPO_NAME', '$COMMIT_SHA', '$SHORT_SHA', '$BRANCH_NAME', '$TAG_NAME']
