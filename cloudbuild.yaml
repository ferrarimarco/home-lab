---
options:
    env:
        - TF_INPUT=false
steps:
    - id: 'branch name'
      name: 'alpine'
      entrypoint: 'sh'
      args:
          - '-c'
          - |
            echo "***********************"
            echo "Branch: $BRANCH_NAME"
            echo "***********************"
    - name: gcr.io/cloud-builders/gcloud
      entrypoint: 'sh'
      args:
          - |
            kms
            decrypt
            --ciphertext-file=terraform.tfvars.enc
            --plaintext-file=terraform.tfvars
            --location=global
            --keyring=cloud-build-keyring
            --key=cloudbuild-crypto-key
    - id: 'tf init'
      name: 'hashicorp/terraform:0.12.20'
      entrypoint: 'sh'
      args:
          - '-c'
          - |
            cd $_TERRAFORM_ENVIRONMENT_PATH || exit 1
            terraform init || exit 1
            cd ../../
    - id: 'tf plan'
      name: 'hashicorp/terraform:0.12.20'
      entrypoint: 'sh'
      args:
          - '-c'
          - |
            cd $_TERRAFORM_ENVIRONMENT_PATH || exit 1
            terraform plan || exit 1
            cd ../../
    - id: 'tf apply'
      name: 'hashicorp/terraform:0.12.20'
      entrypoint: 'sh'
      args:
          - '-c'
          - |
            if [ "${BRANCH_NAME}" = "master" ]; then
                cd $_TERRAFORM_ENVIRONMENT_PATH || exit 1
                echo $BRANCH_NAME
                terraform apply -auto-approve || exit 1
            else
                echo "Not applying any Terraform change. Not on master branch."
                echo "Current branch: $BRANCH_NAME"
            fi
substitutions:
    _TERRAFORM_ENVIRONMENT_PATH: 'provisioning/terraform/environments/prod'
