---
name: Build OS images

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TEMP_WORKSPACE_PATH: "/tmp/temp-customize-os-image-workdir"

on:
  push:
    paths:
      - ".github/workflows/build-os-images.yaml"
      - "provisioning/os-images/**"
  pull_request:
    paths:
      - ".github/workflows/build-os-images.yaml"
      - "provisioning/os-images/**"

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Super-Linter
        uses: github/super-linter@v4.8.1
        env:
          DISABLE_ERRORS: false
          ERROR_ON_MISSING_EXEC_BIT: true
          LINTER_RULES_PATH: .
          VALIDATE_ALL_CODEBASE: true
  customize-preinstalled-os-images:
    env:
      OS_BUILDER_CONTAINER_IMAGE_ID: "ferrarimarco/os-image-builder:latest"
    needs:
      - lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build the OS image builder container image
        uses: docker/build-push-action@v2
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: provisioning/os-images/docker
          load: true
          push: false
          tags: "${{ env.OS_BUILDER_CONTAINER_IMAGE_ID }}"
      - name: "Customize preinstalled OS image. Config: ${{ matrix.build-configuration-file-path }}"
        run: |
          BUILD_CONFIGURATION_FILE_NAME="$(basename "${{ matrix.build-configuration-file-path }}")"
          BUILD_CONFIGURATION_DIRECTORY_PATH="$(dirname "${{ matrix.build-configuration-file-path }}")"
          mkdir -p "${TEMP_WORKSPACE_PATH}"

          docker run \
            --privileged \
            -v /dev:/dev \
            -v "${TEMP_WORKSPACE_PATH}":/tmp/workdir \
            -v "${BUILD_CONFIGURATION_DIRECTORY_PATH}":/tmp/config \
            "${OS_BUILDER_CONTAINER_IMAGE_ID}" \
            --build-config /tmp/config/"${BUILD_CONFIGURATION_FILE_NAME}"

          cat "${TEMP_WORKSPACE_PATH}"/results.out >>"${GITHUB_ENV}"
      - uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: ${{ env.CUSTOMIZED_COMPRESSED_IMAGE_FILE_NAME }}
          path: |
            ${{ env.TEMP_WORKSPACE_PATH }}/**/*.xz
    strategy:
      matrix:
        build-configuration-file-path:
          - "${GITHUB_WORKSPACE}/provisioning/os-images/config/builds/seed-device/ubuntu-20.04-arm64-raspberry-pi-4-seed-device.conf"
  update-release-draft:
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
    outputs:
      release-tag-name: ${{ steps.draft-release.outputs.tag_name }}
    runs-on: ubuntu-latest
    steps:
      - id: draft-release
        name: Update release
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yaml
  upload-images-to-release:
    needs:
      - customize-preinstalled-os-images
      - update-release-draft
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Download artifacts to upload
        uses: actions/download-artifact@v2
      - name: "Upload artifacts to the ${{ needs.update-release-draft.outputs.release-tag-name }} release"
        run: |
          ls ./**/*.${{ matrix.artifact-file-extension }}  >/dev/null && gh release upload "${{ needs.update-release-draft.outputs.release-tag-name }}" ./**/*.${{ matrix.artifact-file-extension }} --clobber
    strategy:
      matrix:
        artifact-file-extension:
          - xz
...
