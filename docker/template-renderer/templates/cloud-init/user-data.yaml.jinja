#cloud-config
{# This file is a template. The next comment applies to the generated files, not to this one #}
# This file is autogenerated from a template. Don't apply changes manually.
---
{% if include_autoinstall %}
autoinstall:
{# Indent user-data under autoinstall #}
{% set user_data_indentation_width = 4 %}
  version: 1

  keyboard:
    layout: us
    toggle: null
    variant: ''

{% if include_autoinstall_network %}
  network:
    version: 2
    ethernets:
      enp0s25:
        addresses:
          - 10.0.0.2/8
        dhcp4: false
        gateway4: 10.0.0.1
        nameservers:
          addresses:
            - 8.8.8.8
            - 8.8.4.4
          search:
            - edge.lab.ferrari.how
        optional: true

{% endif %}
  storage:
    layout:
      name: lvm

  user-data:
{% else %}
{# Don't indent user-data #}
{% set user_data_indentation_width = 0 %}
{% endif %}
{% filter indent(width=user_data_indentation_width) %}
{% if initialize_default_user_password %}

# Set the password to a known value, and expire it right after the first login,
# so that the user is forced to change it.
chpasswd:
  expire: true
  list:
    - "marco:marco"

{% endif %}
{% set default_groups = ['adm', 'audio', 'cdrom', 'dialout', 'dip', 'floppy', 'lxd', 'netdev', 'plugdev', 'sudo', 'video'] %}
{% if groups | length > 0 %}
groups:
{% for group in groups %}
  - {{ group }}
{% endfor %}

{% set user_groups = default_groups + groups %}
{% else %}
{% set user_groups = default_groups %}
{% endif %}
{% if hostname %}
hostname: {{ hostname }}

{% endif %}
locale: {{ locale | default("en_US.UTF-8", true) }}

# Update the contents of /etc/hosts based on the hostname/fqdn specified
manage_etc_hosts: {{ manage_etc_hosts | default(true, true) | lower }}

# Set up the NTP client with default configuration and client
ntp:
  enabled: true
  ntp_client: auto

packages:
{# Install openssh-server by default #}
  - openssh-server
{% for package in packages %}
  - {{ package }}
{% endfor %}

package_update: {{ package_update | default(true, true) | lower }}
package_upgrade: {{ package_upgrade | default(true, true) | lower }}
package_reboot_if_required: {{ package_reboot_if_required | default(true, true) | lower }}

random_seed:
  file: /dev/urandom
  command: ["pollinate", "-r", "-s", "https://entropy.ubuntu.com"]
  command_required: true

resize_rootfs: {{ resize_rootfs | default(true, true) | lower }}

# We don't use a script because Ubuntu autoinstall doesn't support generating
# a user-data file that includes scripts that are not in autoinstall.user-data
{% if runcmd | length > 0 %}
runcmd:
{% for cmd in runcmd %}
  - {{ cmd }}
{% endfor %}

{% endif %}
{% if snap_commands | length > 0 %}
snap:
  commands:
{% for command in snap_commands %}
    "{{ loop.index }}": "{{ command }}"
{% endfor %}

{% endif %}
# Enable SSH password authentication. We use for the first authentication,
# then we switch to key-based authentication later in the setup process.
ssh_pwauth: {{ ssh_pwauth | default(true, true) | lower }}

# Remove default host keys if any
ssh_deletekeys: {{ ssh_deletekeys | default(true, true) | lower }}

timezone: {{ timezone | default("Etc/UTC", true) }}

# Create users and don't preserve the default user,
# so that we've full control on which accounts we expect to be there.
users:
  - name: marco
    gecos: Marco
    groups: [{{ user_groups | sort | join(', ') }}]
{% if initialize_default_user_password %}
    # Don't lock the user to allow the first login with a password,
    # so that we initialize key-based authentication later.
    lock_passwd: false
{% endif %}
    shell: /usr/bin/bash
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
{% endfilter %}
...
