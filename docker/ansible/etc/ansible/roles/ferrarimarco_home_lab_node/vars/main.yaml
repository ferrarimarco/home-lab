---
configuration_directories_to_copy: []
configuration_directories_to_create:
  - "{{ home_lab_configuration_directory_path }}"
  - "{{ systemd_configuration_directory }}"
  - "{{ systemd_journald_configuration_directory_path }}"
directories_to_ensure_ownership:
  - "{{ etc_directory_path }}"
default_docker_compose_file_name: "compose.yaml"
default_prometheus_configuration_file_name: "prometheus.yaml"
docker_compose_up_items: []
docker_compose_services_to_restart: []
docker_configuration_directories:
  - "{{ docker_daemon_configuration_directory_path }}"
docker_daemon_configuration_directory_path: "{{ etc_directory_path }}/docker"
docker_os_services_to_configure:
  - enabled: true
    service_name: "{{ docker_service_name }}"
    service_state: started
docker_repository_url: https://download.docker.com/linux
etc_directory_path: "/etc"
fail2ban_os_services_to_configure:
  - enabled: true
    service_name: "{{ fail2ban_service_name }}"
    service_state: started
fail2ban_templates_to_render:
  - src: "{{ security_fail2ban_custom_configuration_template }}"
    dest: "{{ etc_directory_path }}/fail2ban/jail.local"
    os_services_to_restart:
      - "{{ fail2ban_service_name }}"
home_assistant_configuration_directory_path: "{{ home_lab_configuration_directory_path }}/home-assistant"
home_assistant_configuration_directories:
  - "{{ home_assistant_configuration_directory_path }}"
home_assistant_configuration_directories_to_copy:
  - src: "config/home-assistant"
    dest: "{{ home_assistant_configuration_directory_path }}"
    docker_compose_services_to_restart: "{{ home_assistant_docker_compose_up_items }}"
home_assistant_docker_compose_up_items:
  - compose_file_path: "{{ home_assistant_configuration_directory_path }}/{{ default_docker_compose_file_name }}"
home_lab_configuration_directory_path: "{{ etc_directory_path }}/ferrarimarco-home-lab"
monitoring_backend_configuration_directory_path: "{{ home_lab_configuration_directory_path }}/monitoring-backend"
monitoring_backend_configuration_directories:
  - "{{ monitoring_backend_configuration_directory_path }}"
monitoring_backend_configuration_directories_to_copy:
  - src: "{{ monitoring_backend_configuration_source_directory_path }}"
    dest: "{{ monitoring_backend_configuration_directory_path }}"
    docker_compose_services_to_restart: "{{ monitoring_backend_docker_compose_up_items }}"
monitoring_backend_configuration_source_directory_path: "config/monitoring-backend"
monitoring_backend_default_dns_check_targets:
  - "{{ main_dns_server_address }}"
monitoring_backend_dns_a_record_check_template:
  - check_name: "dns_{{ item | lower | replace('.', '_') }}_a"
    query_name: "{{ item }}"
    query_type: "A"
monitoring_backend_docker_compose_up_items:
  - compose_file_path: "{{ monitoring_backend_configuration_directory_path }}/{{ default_docker_compose_file_name }}"
monitoring_backend_templates_to_render:
  - src: "prometheus/{{ default_prometheus_configuration_file_name }}.jinja"
    dest: "{{ monitoring_backend_configuration_directory_path }}/{{ default_prometheus_configuration_file_name }}"
    docker_compose_services_to_restart: "{{ monitoring_backend_docker_compose_up_items }}"
  - src: "prometheus-blackbox-exporter/config.yaml.jinja"
    dest: "{{ monitoring_backend_configuration_directory_path }}/prometheus-blackbox-exporter-config.yaml"
    docker_compose_services_to_restart: "{{ monitoring_backend_docker_compose_up_items }}"
monitoring_configuration_directories:
  - "{{ monitoring_configuration_directory_path }}"
  - "{{ monitoring_host_metrics_directory_path }}"
monitoring_configuration_directory_path: "{{ home_lab_configuration_directory_path }}/monitoring"
monitoring_docker_compose_up_items:
  - compose_file_path: "{{ monitoring_configuration_directory_path }}/{{ default_docker_compose_file_name }}"
monitoring_host_metrics_directory_path: "/var/lib/node_exporter/textfile_collector"
monitoring_templates_to_render:
  - src: "monitoring/{{ default_docker_compose_file_name }}.jinja"
    dest: "{{ monitoring_configuration_directory_path }}/{{ default_docker_compose_file_name }}"
    docker_compose_services_to_restart: "{{ monitoring_docker_compose_up_items }}"
mosquitto_configuration_directory_path: "{{ home_lab_configuration_directory_path }}/mosquitto"
mosquitto_configuration_directories:
  - "{{ mosquitto_configuration_directory_path }}"
mosquitto_configuration_directories_to_copy:
  - src: "config/mosquitto"
    dest: "{{ mosquitto_configuration_directory_path }}"
    docker_compose_services_to_restart: "{{ mosquitto_docker_compose_up_items }}"
mosquitto_docker_compose_up_items:
  - compose_file_path: "{{ mosquitto_configuration_directory_path }}/{{ default_docker_compose_file_name }}"
os_services_to_configure: []
os_services_to_restart: []
sense_hat_exporter_configuration_directories:
  - "{{ sense_hat_exporter_configuration_directory_path }}"
sense_hat_exporter_configuration_directory_path: "{{ home_lab_configuration_directory_path }}/sense-hat-exporter"
sense_hat_exporter_configuration_directories_to_copy:
  - src: "config/sense-hat-exporter"
    dest: "{{ sense_hat_exporter_configuration_directory_path }}"
    os_services_to_restart:
      - "{{ sense_hat_exporter_os_service_name }}"
sense_hat_exporter_executable_path: "{{ sense_hat_exporter_configuration_directory_path }}/sense-hat-exporter.py"
sense_hat_exporter_requirements_file_path: "{{ sense_hat_exporter_configuration_directory_path }}/requirements.txt"
sense_hat_exporter_run_directory_path: "/run/sense-hat-exporter"
sense_hat_exporter_virtual_env_path: "{{ sense_hat_exporter_run_directory_path }}/.venv"
sense_hat_exporter_os_service_file_name: "{{ sense_hat_exporter_os_service_name }}.service"
sense_hat_exporter_os_service_name: "sense-hat-exporter"
sense_hat_os_services_to_configure:
  - enabled: true
    service_name: "{{ sense_hat_exporter_os_service_file_name }}"
    service_state: started
sense_hat_templates_to_render:
  - src: "sense-hat-exporter/{{ sense_hat_exporter_os_service_file_name }}.jinja"
    dest: "{{ systemd_system_services_configuration_directory }}/{{ sense_hat_exporter_os_service_file_name }}"
    os_services_to_restart:
      - "{{ sense_hat_exporter_os_service_name }}"
ssh_os_services_to_configure:
  - enabled: true
    service_name: "{{ security_sshd_name }}"
    service_state: started
sshd_validation_command: "{{ sshd_path }} -T -f %s"
systemd_configuration_directory: /etc/systemd
systemd_system_services_configuration_directory: "{{ systemd_configuration_directory }}/system"
systemd_journald_configuration_directory_path: "{{ systemd_configuration_directory + '/journald.conf.d' }}"
systemd_journal_file_path: /var/log/journal
templates_to_render:
  - src: "systemd/journald/001-journald.conf.jinja"
    dest: "{{ systemd_journald_configuration_directory_path }}/001-journald.conf"
    os_services_to_restart:
      - systemd-journald
unattended_upgrades_os_services_to_configure:
  - enabled: true
    service_name: "{{ unattended_upgrades_service_name }}"
    service_state: started
unattended_upgrades_templates_to_render:
  - src: "unattended-upgrades/20auto-upgrades.jinja"
    dest: "{{ etc_directory_path }}/apt/apt.conf.d/20auto-upgrades"
    os_services_to_restart:
      - "{{ unattended_upgrades_service_name }}"
...
