---
cadvisor_exposed_port: 8083
configure_docker: false
configure_dphys_swapfile: false
configure_dphys_swapfile_swapfactor: 2
configure_frigate: false
configure_home_assistant: false
configure_monitoring: true
configure_monitoring_backend: false
configure_mqtt_broker: false
configure_network_stack: false
configure_network_shares: false
configure_ssh: true
configure_tailscale: false
configure_torrent: false
configure_wifi: false
configure_zigbee2mqtt: false
default_user_groups: []
delete_systemd_journal_file: false
disks_to_mount: []
dns_records_to_configure: []
docker_apt_release_channel: stable
# This was used to install the standalone compose executable before switching to the Docker Compose plugin for Docker Engine
docker_compose_standalone_executable_path: "/usr/local/bin/docker-compose"
docker_daemon_options: {
  "log-driver": "local",
  "log-opts": {
    "compress": "true",
    "max-size": "10m",
    "max-file": "3",
  }
}
docker_os_users:
  - append: true
    name: "{{ ansible_user }}"
    groups:
      - "docker"
edge_dns_server:
  fqdn: "{{ edge_environment_gateway.fqdn }}"
  ipv4_address: "{{ edge_environment_gateway.ipv4_address }}"
  port: 53
edge_environment_gateway:
  fqdn: "gateway.{{ edge_environment_root_fqdn }}"
  ipv4_address: "10.0.0.1"
edge_environment_root_fqdn: "edge.{{ root_dns_zone.fqdn }}"
enable_prometheus_node_exporter_scraping: true
frigate_host_port: 5000
has_argonone_case: false
has_raspberry_pi_v2_camera: false
has_sense_hat: false
home_assistant_user_interface_host_port: 8123
home_lab_node_ssh_public_key_path: ""
frigate_cameras:
  # Keeping this as a record if we redeploy cam-1
  # - name: cam-1
  #   inputs:
  #       path: rtsp://cam-1.{{ edge_environment_root_fqdn }}:554/11
  #       roles:
  #         - detect
  #         - record
  #         - rtmp
  # Keeping this as a record if we redeploy cam-2
  # - name: cam-2
  #   inputs:
  #     - ffmpeg:
  #         # The only change to default arguments is the transport (TCP is the default, but we need UDP in this case)
  #         input_args: -avoid_negative_ts make_zero -fflags +genpts+discardcorrupt -rtsp_transport udp -timeout 5000000 -use_wallclock_as_timestamps 1
  #       path: rtsp://raspberrypi3.{{ edge_environment_root_fqdn }}:8554/stream1
  #       roles:
  #         - detect
  #         - record
  - name: cam-3
    inputs:
      - path: rtsp://{{ cam_3_rtps_username }}:{{ cam_3_rtps_password }}@cam-3.{{ edge_environment_root_fqdn }}:554/h264Preview_01_sub
        roles:
          - detect
      - path: rtsp://{{ cam_3_rtps_username }}:{{ cam_3_rtps_password }}@cam-3.{{ edge_environment_root_fqdn }}:554/h264Preview_01_main
        roles:
          - record
is_raspberry_pi: false
monitoring_backend_dns_records_to_check:
  # Keeping this as a record if we redeploy cam-1
  # - check_name: "dns_cam_1_edge_lab_ferrari_how_a"
  #   query_name: "cam-1.{{ edge_environment_root_fqdn }}"
  #   query_type: "A"
  - check_name: "dns_cam_3_edge_lab_ferrari_how_a"
    query_name: "cam-3.{{ edge_environment_root_fqdn }}"
    query_type: "A"
  - check_name: "dns_ferrari_how_txt"
    query_name: "ferrari.how"
    query_type: "TXT"
    fail_if_none_matches_regexp_value: ".*google-site-verification.*"
  - check_name: "dns_ferrarimarco_info_a"
    query_name: "ferrarimarco.info"
    query_type: "A"
  - check_name: "dns_ferrarimarco_info_ns"
    query_name: "ferrarimarco.info"
    query_type: "NS"
    fail_if_not_matches_regexp_value: ".*googledomains.*"
  - check_name: "dns_smart_desk_edge_lab_ferrari_how_a"
    query_name: "smart-desk.{{ edge_environment_root_fqdn }}"
    query_type: "A"
monitoring_backend_http_endpoints_to_check:
  - check_target: "http://{{ frigate_http_endpoint_fqdn }}:{{ frigate_host_port }} # Frigate"
  - check_target: "http://{{ grafana_http_endpoint_fqdn }}:{{ monitoring_backend_grafana_host_port }} # Grafana"
  - check_target: "http://{{ home_assistant_http_endpoint_fqdn }}:{{ home_assistant_user_interface_host_port }} # Home Assistant"
  - check_target: "http://{{ prometheus_http_endpoint_fqdn }}:{{ monitoring_backend_prometheus_host_port }} # Prometheus"
  - check_target: "http://{{ prometheus_blackbox_exporter_http_endpoint_fqdn }}:{{ monitoring_backend_prometheus_node_exporter_host_port }} # Prometheus Node Exporter"
  - check_target: "http://{{ qbittorrent_http_endpoint_fqdn }}:{{ qbittorrent_user_interface_port }} # qBittorrent"
  - check_target: "http://{{ zigbee2mqtt_http_endpoint_fqdn }}:{{ zigbee2mqtt_user_interface_host_port }} # Zigbee2MQTT"
monitoring_backend_icmp_ping_hosts_to_check:
  - "1.1.1.1"
  # Keeping this as a record if we redeploy cam-1
  # - "cam-1.{{ edge_environment_root_fqdn }}"
  - "cam-3.{{ edge_environment_root_fqdn }}"
  - "dns.google"
  - "ferrarimarco.info"
  - "{{ edge_environment_gateway.fqdn }}"
  - "github.com"
  - "google.com"
  - "smart-desk.{{ edge_environment_root_fqdn }}"
monitoring_backend_grafana_host_port: 3000
monitoring_backend_prometheus_host_port: 9090
monitoring_backend_prometheus_node_exporter_container_port: 9115
monitoring_backend_prometheus_node_exporter_host_port: 9115
monitoring_backend_prometheus_metrics_retention_time: "60d"
monitoring_smart_metrics_collection_script_url: "https://raw.githubusercontent.com/prometheus-community/node-exporter-textfile-collector-scripts/23b0aa0d5b0db999795c752685b8b38d7a61e91a/smartmon.sh"
network_stack_configure_recursive_dns_resolver: false
network_stack_configure_reverse_proxy: false
network_stack_coredns_dns_host_port: 8053
network_stack_coredns_healthcheck_port: 8085
network_stack_coredns_prometheus_metrics_port: 9153
network_stack_container_network_subnet: "172.21.0.0/24"
# Skip the first address because the container engine reserves it for the default gateway
network_stack_container_network_coredns_container_ipv4_address: "{{ network_stack_container_network_subnet | ansible.utils.nthhost(2) }}"
network_stack_container_network_unbound_container_ipv4_address: "{{ network_stack_container_network_subnet | ansible.utils.nthhost(3) }}"
network_stack_unbound_dns_host_port: 53
network_stack_unbound_enable_logs: true
network_stack_unbound_verbosity: 2
qbittorrent_user_interface_port: 8084
raspberry_pi_config_file_values: {}
# Set this separately here to avoid an infinite loop when initializing the root_dns_zone variable
root_dns_zone_fqdn: lab.ferrari.how
root_dns_zone:
  default_record_ttl: 3600
  dns_administrator_email_address: "dns-admin.{{ root_dns_zone_fqdn }}"
  fqdn: "{{ root_dns_zone_fqdn }}"
  expire_time: 4000000
  minimum_ttl_time: 11200
  refresh_time: 86400
  retry_time: 7200
  serial_number: 2017042745
samba_additional_interfaces: "10.0.0.0/8"
samba_default_readers_group_name: "samba-readers"
samba_default_writers_group_name: "samba-writers"
samba_enable_homes_share: false
samba_hosts_allow: "10."
samba_shares: []
samba_os_users: []
samba_workgroup: "WORKGROUP"
security_fail2ban_enabled: true
security_fail2ban_custom_configuration_template: "fail2ban/jail.local.jinja"
security_ssh_allowed_groups: []
security_ssh_allowed_users:
  - "{{ ansible_user }}"
security_ssh_challenge_response_auth: "no"
security_ssh_gss_api_authentication: "no"
security_ssh_password_authentication: "no"
security_ssh_permit_empty_password: "no"
security_ssh_permit_root_login: "no"
security_ssh_port: 22
security_ssh_usedns: "no"
security_ssh_x11_forwarding: "no"
security_sudoers_passworded: []
security_sudoers_passwordless:
  - "{{ ansible_user }}"
security_unattended_upgrades_enabled: true
systemd_journald_runtime_max_memory_use: "64M"
systemd_journald_system_max_memory_use: "500M"
tailscale_release_channel: "stable"
timezone: "Europe/London"
traefik_api_http_port: 8080
traefik_cleartext_http_port: 80
traefik_secured_http_port: 443
upstream_dns_servers:
  - "8.8.4.4"
  - "8.8.8.8"
zigbee2mqtt_user_interface_host_port: 8081
...
