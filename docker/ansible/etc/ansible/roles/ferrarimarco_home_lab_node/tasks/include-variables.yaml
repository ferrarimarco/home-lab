---
- name: Load a variable file based on the OS type, or a default if not found.
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yaml"
    - "{{ ansible_distribution }}.yaml"
    - "{{ ansible_os_family }}.yaml"
    - "default.yaml"

- name: Load Raspberry Pi OS variables.
  ansible.builtin.include_vars: "raspberry-pi-os.yaml"
  when: is_raspberry_pi

- name: Load container image versions
  ansible.builtin.include_tasks:
    file: "register-container-image-versions-facts.yaml"

- name: Register facts based on the OS type, or a default if not found
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - "register-{{ ansible_distribution }}-{{ ansible_distribution_version }}-facts.yaml"
    - "register-{{ ansible_distribution }}-facts.yaml"
    - "register-{{ ansible_os_family }}-facts.yaml"
    - "register-default-facts.yaml"

- name: Register Raspberry Pi OS facts
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  when: is_raspberry_pi
  with_first_found:
    - "register-raspberry-pi-os-facts.yaml"

- name: Load variables for each stack
  ansible.builtin.include_vars:
    dir: vars
    files_matching: "^(.*)-stack.yaml"

- name: Set custom facts
  ansible.builtin.include_tasks:
    apply:
      vars:
        fact_category: "{{ item.fact_category }}"
        fact_configuration_directories: "{{ item.fact_configuration_directories | default([]) }}"
        fact_cron_jobs: "{{ item.fact_cron_jobs | default([]) }}"
        fact_docker_compose_up_items: "{{ item.fact_docker_compose_up_items | default([]) }}"
        fact_enable_custom_fact: "{{ item.enable_custom_fact }}"
        fact_files_to_configure: "{{ item.fact_files_to_configure | default([]) }}"
        fact_files_to_download: "{{ item.fact_files_to_download | default([]) }}"
        fact_os_groups: "{{ item.fact_os_groups | default([]) }}"
        fact_os_users: "{{ item.fact_os_users | default([]) }}"
        fact_os_package_repositories: "{{ item.fact_os_package_repositories | default([]) }}"
        fact_os_packages: "{{ item.fact_os_packages | default([]) }}"
        fact_os_services: "{{ item.fact_os_services | default([]) }}"
        fact_templates_to_render: "{{ item.fact_templates_to_render | default([]) }}"
    file: register-custom-facts.yaml
  with_items:
    - enable_custom_fact: "{{ has_sense_hat }}"
      fact_category: "raspberry_pi_sense_hat"
      fact_configuration_directories: "{{ sense_hat_exporter_configuration_directories }}"
      fact_files_to_configure: "{{ sense_hat_exporter_files_to_configure }}"
      fact_os_services: "{{ sense_hat_os_services }}"
      fact_templates_to_render: "{{ sense_hat_templates_to_render }}"
    - enable_custom_fact: "{{ configure_ssh }}"
      fact_category: "ssh"
      fact_os_packages: "{{ ssh_os_packages }}"
      fact_os_services: "{{ ssh_os_services }}"
    - enable_custom_fact: "{{ configure_docker }}"
      fact_category: "docker"
      fact_configuration_directories: "{{ docker_configuration_directories }}"
      fact_cron_jobs:
        - become: true
          name: docker system prune
          weekday: "1"
          minute: "5"
          hour: "5"
          user: root
          job: "docker system prune --all --force --volumes"
          cron_file: ansible_docker-system-prune
          state: "{{ configure_docker | ternary('present', 'absent') }}"
      fact_files_to_configure:
        - path: "{{ docker_compose_standalone_executable_path }}"
          state: absent
      fact_os_groups:
        - name: "{{ docker_default_os_group_name }}"
          state: "{{ configure_docker | ternary('present', 'absent') }}"
      fact_os_package_repositories: "{{ docker_repositories_to_add }}"
      fact_os_packages: "{{ docker_os_packages }}"
      fact_os_services: "{{ docker_os_services }}"
      fact_os_users: "{{ docker_os_users }}"
      fact_templates_to_render: "{{ docker_templates_to_render }}"
    - enable_custom_fact: "{{ security_fail2ban_enabled }}"
      fact_category: "fail2ban"
      fact_configuration_directories: "{{ fail2ban_configuration_directories }}"
      fact_os_packages: "{{ fail2ban_packages }}"
      fact_os_services: "{{ fail2ban_os_services }}"
      fact_templates_to_render: "{{ fail2ban_templates_to_render }}"
    - enable_custom_fact: "{{ security_unattended_upgrades_enabled }}"
      fact_category: "unattended-upgrades"
      fact_os_packages: "{{ unattended_upgrades_packages }}"
      fact_os_services: "{{ unattended_upgrades_os_services }}"
      fact_templates_to_render: "{{ unattended_upgrades_templates_to_render }}"
    - enable_custom_fact: "{{ configure_monitoring }}"
      fact_category: "monitoring"
      fact_configuration_directories: "{{ monitoring_configuration_directories }}"
      fact_docker_compose_up_items: "{{ monitoring_docker_compose_up_items }}"
      fact_files_to_download:
        - url: "{{ monitoring_smart_metrics_collection_script_url }}"
          dest: "{{ monitoring_smartmon_prometheus_exporter_script_destination_path }}"
          state: "{{ configure_monitoring | ternary('file', 'absent') }}"
          mode: "0755"
          owner: "root"
          group: "root"
      fact_os_packages: "{{ monitoring_os_packages }}"
      fact_os_services:
        - enabled: true
          service_name: "{{ monitoring_smartmon_prometheus_exporter_timer_file_name }}"
          service_state: "{{ configure_monitoring | ternary('started', 'stopped') }}"
      fact_templates_to_render: "{{ monitoring_templates_to_render }}"
    - enable_custom_fact: "{{ configure_monitoring_nut }}"
      fact_category: "monitoring-nut"
      fact_os_packages: "{{ monitoring_nut_os_packages }}"
      fact_templates_to_render: "{{ monitoring_nut_templates_to_render }}"
    - enable_custom_fact: "{{ configure_monitoring_backend }}"
      fact_category: "monitoring-backend"
      fact_configuration_directories: "{{ monitoring_backend_configuration_directories }}"
      fact_docker_compose_up_items: "{{ monitoring_backend_docker_compose_up_items }}"
      fact_files_to_configure: "{{ monitoring_backend_files_to_configure }}"
      fact_templates_to_render: "{{ monitoring_backend_templates_to_render }}"
    - enable_custom_fact: "{{ configure_home_assistant }}"
      fact_category: "home-assistant"
      fact_configuration_directories: "{{ home_assistant_configuration_directories }}"
      fact_docker_compose_up_items: "{{ home_assistant_docker_compose_up_items }}"
      fact_files_to_configure: "{{ home_assistant_files_to_configure }}"
      fact_templates_to_render: "{{ home_assistant_templates_to_render }}"
    - enable_custom_fact: "{{ configure_mqtt_broker }}"
      fact_category: "mosquitto"
      fact_configuration_directories: "{{ mosquitto_configuration_directories }}"
      fact_docker_compose_up_items: "{{ mosquitto_docker_compose_up_items }}"
      fact_templates_to_render: "{{ mosquitto_templates_to_render }}"
    - enable_custom_fact: "{{ configure_frigate }}"
      fact_category: "frigate"
      fact_configuration_directories: "{{ frigate_configuration_directories }}"
      fact_docker_compose_up_items: "{{ frigate_docker_compose_up_items }}"
      fact_templates_to_render: "{{ frigate_templates_to_render }}"
    - enable_custom_fact: "{{ configure_dphys_swapfile }}"
      fact_category: "dphys-swapfile"
      fact_templates_to_render: "{{ dphys_swapfile_templates_to_render }}"
    - enable_custom_fact: "{{ has_argonone_case }}"
      fact_category: "argonone-case"
      fact_configuration_directories: "{{ argonone_configuration_directories }}"
      fact_files_to_configure: "{{ argonone_files_to_configure }}"
      fact_os_services: "{{ argonone_os_services }}"
    - enable_custom_fact: "{{ configure_tailscale }}"
      fact_category: "tailscale"
      fact_os_package_repositories: "{{ tailscale_os_package_repositories }}"
      fact_os_packages: "{{ tailscale_os_packages }}"
    - enable_custom_fact: "{{ configure_network_shares }}"
      fact_category: "network-shares"
      fact_os_groups:
        - name: "{{ samba_default_readers_group_name }}"
          state: "{{ configure_network_shares | ternary('present', 'absent') }}"
        - name: "{{ samba_default_writers_group_name }}"
          state: "{{ configure_network_shares | ternary('present', 'absent') }}"
      fact_os_packages:
        - name: samba
          state: "{{ configure_network_shares | ternary('present', 'absent') }}"
      fact_os_services:
        - enabled: true
          service_name: "{{ samba_service_name }}"
          service_state: "{{ configure_network_shares | ternary('started', 'stopped') }}"
      fact_os_users: "{{ samba_os_users }}"
      fact_templates_to_render:
        - src: "samba/smb.conf.jinja"
          dest: "{{ etc_directory_path }}/samba/smb.conf"
          state: "{{ configure_network_shares | ternary('present', 'absent') }}"
          os_services_to_restart:
            - "{{ samba_service_name }}"
    - enable_custom_fact: "{{ configure_torrent }}"
      fact_category: "torrent"
      fact_configuration_directories: "{{ torrent_configuration_directories }}"
      fact_docker_compose_up_items: "{{ torrent_docker_compose_up_items }}"
      fact_templates_to_render: "{{ torrent_templates_to_render }}"
    - enable_custom_fact: "{{ has_raspberry_pi_v2_camera }}"
      fact_category: "raspberry-pi-v2-camera"
      fact_os_packages:
        - name: vlc
          state: "{{ has_raspberry_pi_v2_camera | ternary('present', 'absent') }}"
      fact_os_services:
        - enabled: true
          service_name: "raspberry-pi-v2-camera-rtsp.service"
          service_state: "{{ has_raspberry_pi_v2_camera | ternary('started', 'stopped') }}"
      fact_templates_to_render:
        - src: "raspberry-pi-camera/raspberry-pi-v2-camera-rtsp.service.jinja"
          dest: "{{ systemd_system_services_configuration_directory }}/raspberry-pi-v2-camera-rtsp.service"
          state: "{{ has_raspberry_pi_v2_camera | ternary('present', 'absent') }}"
          os_services_to_restart:
            - "raspberry-pi-v2-camera-rtsp"
    - enable_custom_fact: "{{ configure_zigbee2mqtt }}"
      fact_category: "zigbee2mqtt"
      fact_configuration_directories: "{{ zigbee2mqtt_configuration_directories }}"
      fact_docker_compose_up_items: "{{ zigbee2mqtt_docker_compose_up_items }}"
      fact_templates_to_render: "{{ zigbee2mqtt_templates_to_render }}"
    - enable_custom_fact: "{{ configure_wifi }}"
      fact_category: "wifi"
      fact_templates_to_render: "{{ wifi_templates_to_render }}"
      fact_os_packages: "{{ wifi_os_packages }}"
      fact_os_services:
        - enabled: true
          service_name: "{{ wpa_supplicant_service_name }}"
          service_state: "{{ configure_wifi | ternary('started', 'stopped') }}"
    - enable_custom_fact: "{{ configure_network_stack }}"
      fact_category: "network-stack"
      fact_configuration_directories: "{{ network_stack_configuration_directories }}"
      fact_docker_compose_up_items: "{{ network_stack_docker_compose_up_items }}"
      fact_templates_to_render: "{{ network_stack_templates_to_render }}"
    - enable_custom_fact: "{{ configure_backup_restic }}"
      fact_category: "restic"
      fact_configuration_directories: "{{ restic_configuration_directories + restic_backup_target_directories | default([]) }}"
      fact_docker_compose_up_items: "{{ restic_docker_compose_up_items }}"
      fact_files_to_configure: "{{ restic_files_to_configure }}"
      fact_cron_jobs: "{{ restic_backup_cron_jobs | default([]) }}"
      fact_templates_to_render: "{{ restic_templates_to_render }}"
    - enable_custom_fact: "{{ configure_syncthing }}"
      fact_category: "syncthing"
      fact_configuration_directories: "{{ syncthing_configuration_directories }}"
      fact_docker_compose_up_items: "{{ syncthing_docker_compose_up_items }}"
      fact_templates_to_render: "{{ syncthing_templates_to_render }}"
    - enable_custom_fact: "{{ configure_media_stack }}"
      fact_category: "media-stack"
      fact_configuration_directories: "{{ media_stack_configuration_directories }}"
      fact_docker_compose_up_items: "{{ media_stack_docker_compose_up_items }}"
      fact_templates_to_render: "{{ media_stack_templates_to_render }}"
    - enable_custom_fact: "{{ configure_asuswrt_chkwan }}"
      fact_category: "{{ asuswrt_chkwan_stack_tag }}"
      fact_files_to_download:
        - url: "{{ asuswrt_chkwan_script_url }}"
          dest: "{{ asuswrt_chkwan_script_destination_path }}"
          state: "{{ configure_asuswrt_chkwan | ternary('file', 'absent') }}"
          mode: "0755"
          owner: "root"
          group: "root"
      fact_os_services: "{{ asuswrt_chkwan_os_services }}"
      fact_templates_to_render: "{{ asuswrt_chkwan_templates_to_render }}"
    - enable_custom_fact: "{{ configure_monitoring_ont }}"
      fact_category: "{{ monitoring_ont_tag }}"
      fact_configuration_directories: "{{ monitoring_ont_configuration_directories }}"
      fact_files_to_configure: "{{ monitoring_ont_files_to_configure }}"
      fact_os_services: "{{ monitoring_ont_os_services }}"
      fact_templates_to_render: "{{ monitoring_ont_templates_to_render }}"

- name: Register Raspberry Pi Sense Hat facts
  ansible.builtin.include_tasks:
    file: register-raspberry-pi-sense-hat-facts.yaml
  when: has_sense_hat

- name: Register DNS facts
  ansible.builtin.include_tasks:
    file: register-dns-facts.yaml
  # The network stack and the monitoring backend both need the same list of DNS records
  when: configure_network_stack or configure_monitoring_backend

- name: Register monitoring-backend facts
  ansible.builtin.include_tasks:
    file: register-monitoring-backend-facts.yaml
  when: configure_monitoring_backend
...
