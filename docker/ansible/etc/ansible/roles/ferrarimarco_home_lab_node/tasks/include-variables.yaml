---
- name: Load a variable file based on the OS type, or a default if not found.
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yaml"
    - "{{ ansible_distribution }}.yaml"
    - "{{ ansible_os_family }}.yaml"
    - "default.yaml"

- name: Load Raspberry Pi OS variables.
  ansible.builtin.include_vars: "raspberry-pi-os.yaml"
  when: is_raspberry_pi

- name: Register facts based on the OS type, or a default if not found
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - "register-{{ ansible_distribution }}-{{ ansible_distribution_version }}-facts.yaml"
    - "register-{{ ansible_distribution }}-facts.yaml"
    - "register-{{ ansible_os_family }}-facts.yaml"
    - "register-default-facts.yaml"

- name: Add Sense Hat packages to the list of packages to install
  ansible.builtin.set_fact:
    apt_packages_to_install: "{{ apt_packages_to_install + raspberry_pi_sense_hat_apt_packages }}"
  when: has_sense_hat

- name: Add Sense Hat config file values to the config file values dictionary
  ansible.builtin.set_fact:
    raspberry_pi_config_file_values: "{{ raspberry_pi_config_file_values | combine({item.key: item.value}) }}"
  with_dict: "{{ raspberry_pi_sense_hat_config_txt_values }}"
  when: has_sense_hat

- name: Add Docker repositories to the list of repositories to add
  ansible.builtin.set_fact:
    apt_repositories_to_add: "{{ apt_repositories_to_add + docker_repositories_to_add }}"
  when: configure_docker

- name: Add Docker packages to the list of packages to install
  ansible.builtin.set_fact:
    apt_packages_to_install: "{{ apt_packages_to_install + docker_packages_to_install }}"
  when: configure_docker

- name: Add Docker packages to uninstall to the list of packages to uninstall
  ansible.builtin.set_fact:
    apt_packages_to_uninstall: "{{ apt_packages_to_uninstall + docker_packages_to_uninstall }}"
  when: configure_docker

- name: Add fail2ban packages to the list of packages to install
  ansible.builtin.set_fact:
    apt_packages_to_install: "{{ apt_packages_to_install + fail2ban_packages }}"
  when: security_fail2ban_enabled

- name: Add unattended-upgrades packages to the list of packages to install
  ansible.builtin.set_fact:
    apt_packages_to_install: "{{ apt_packages_to_install + unattended_upgrades_packages }}"
  when: security_unattended_upgrades_enabled
...
