---
- name: Configure SSH server
  ansible.builtin.lineinfile:
    dest: "{{ security_ssh_config_path }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    validate: "{{ sshd_validation_command }}"
    mode: "0644"
  notify: Restart ssh
  with_items:
    - regexp: "^PermitRootLogin"
      line: "PermitRootLogin {{ security_ssh_permit_root_login }}"
    - regexp: "^Port"
      line: "Port {{ security_ssh_port }}"
    - regexp: "^UseDNS"
      line: "UseDNS {{ security_ssh_usedns }}"
    - regexp: "^PermitEmptyPasswords"
      line: "PermitEmptyPasswords {{ security_ssh_permit_empty_password }}"
    - regexp: "^ChallengeResponseAuthentication"
      line: "ChallengeResponseAuthentication {{ security_ssh_challenge_response_auth }}"
    - regexp: "^GSSAPIAuthentication"
      line: "GSSAPIAuthentication {{ security_ssh_gss_api_authentication }}"
    - regexp: "^X11Forwarding"
      line: "X11Forwarding {{ security_ssh_x11_forwarding }}"

# Do this in a dedicated task so that we're not locked out from SSH if we authenticated
# with a password.
- name: Configure SSH password-based authentication
  ansible.builtin.lineinfile:
    dest: "{{ security_ssh_config_path }}"
    regexp: "^PasswordAuthentication"
    line: "PasswordAuthentication {{ security_ssh_password_authentication }}"
    state: present
    validate: "{{ sshd_validation_command }}"
    mode: "0644"
  notify: Restart ssh
  when: ansible_password is not defined

- name: Add configured users allowed to connect over ssh
  ansible.builtin.lineinfile:
    dest: "{{ security_ssh_config_path }}"
    regexp: '^AllowUsers'
    line: "AllowUsers {{ security_ssh_allowed_users | join(' ') }}"
    state: present
    create: true
    validate: "{{ sshd_validation_command }}"
    mode: "0644"
  notify: Restart ssh
  when: security_ssh_allowed_users | length > 0

- name: Add configured groups allowed to connect over ssh
  ansible.builtin.lineinfile:
    dest: "{{ security_ssh_config_path }}"
    regexp: '^AllowGroups'
    line: "AllowGroups {{ security_ssh_allowed_groups | join(' ') }}"
    state: present
    create: true
    validate: "{{ sshd_validation_command }}"
    mode: "0644"
  notify: Restart ssh
  when: security_ssh_allowed_groups | length > 0
...
