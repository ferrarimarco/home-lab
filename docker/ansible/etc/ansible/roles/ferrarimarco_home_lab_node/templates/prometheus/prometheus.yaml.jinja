---
global:
  evaluation_interval: 1m
  scrape_interval: 30s

scrape_configs:
  - job_name: "grafana"
    static_configs:
      - targets:
        - "grafana:3000"

  - job_name: "prometheus"
    scrape_interval: 5s
    static_configs:
      - targets:
        - "localhost:9090"

  - job_name: "node_exporter"
    static_configs:
      - targets:
{% for host in groups['all'] %}
{% if hostvars[host].enable_prometheus_node_exporter_scraping | default(true) %}
        - "{{ host }}:{{ prometheus_node_exporter_port }}"
{% endif %}
{% endfor %}

  - job_name: "cadvisor"
    static_configs:
      - targets:
{% for host in groups['all'] %}
{% if hostvars[host].configure_docker | default(false) %}
        - "{{ host }}:{{ hostvars[host].cadvisor_exposed_port | default(cadvisor_exposed_port) }}"
{% endif %}
{% endfor %}

  - job_name: blackbox
    static_configs:
      - targets:
        - "blackbox-exporter:{{ monitoring_backend_prometheus_node_exporter_container_port }}"

{% for dns_record_to_check in monitoring_backend_dns_records_to_check %}
  - job_name: "blackbox-dns-{{ dns_record_to_check.check_name }}"
    metrics_path: /probe
    params:
      module:
        - "{{ dns_record_to_check.check_name }}"
    static_configs:
      - targets:
{% for dns_resolver in network_stack_edge_dns_resolvers %}
        - "{{ dns_resolver.ipv4_address }}{% if dns_resolver.port is defined %}:{{ dns_resolver.port }}{% endif %}"
{% endfor %}
{% if dns_record_to_check.query_name.endswith(edge_environment_root_fqdn) %}
{% if edge_dns_server.fqdn is defined %}
        - "{{ edge_dns_server.fqdn }}{% if edge_dns_server.port is defined %}:{{ edge_dns_server.port }}{% endif %}"
{% endif %}
{# Don't add the edge DNS server by IPv4 because it's already in the network_stack_edge_dns_resolvers set. #}
{# Leaving the following as a (commented out) reference if things change in the future #}
{# {% if edge_dns_server.ipv4_address is defined %} #}
{#         - "{{ edge_dns_server.ipv4_address }}{% if edge_dns_server.port is defined %}:{{ edge_dns_server.port }}{% endif %}" #}
{# {% endif %} #}
{% endif %}
    relabel_configs:
      - source_labels: [__address__] # Add a target parameter of the scrape request URL
        target_label: __param_target
      - source_labels: [__param_target] # Set the instance label
        target_label: instance
      - target_label: __address__ # Set the scrape request address to point to the Blackbox exporter hostname:port
        replacement: blackbox-exporter:{{ monitoring_backend_prometheus_node_exporter_container_port }} # Blackbox exporter hostname:port
{% endfor %}

{% if monitoring_backend_http_endpoints_to_check is defined and monitoring_backend_http_endpoints_to_check | length > 0 %}
  - job_name: "blackbox-http-2xx"
    metrics_path: /probe
    params:
      module:
        - "http_2xx"
    static_configs:
      - targets:
{% for http_endpoint_to_check in monitoring_backend_http_endpoints_to_check %}
        - {{ http_endpoint_to_check.check_target }}
{% endfor %}
    relabel_configs:
      - source_labels: [__address__] # Add a target parameter of the scrape request URL
        target_label: __param_target
      - source_labels: [__param_target] # Set the instance label
        target_label: instance
      - target_label: __address__ # Set the scrape request address to point to the Blackbox exporter hostname:port
        replacement: blackbox-exporter:{{ monitoring_backend_prometheus_node_exporter_container_port }} # Blackbox exporter hostname:port
{% endif %}

  - job_name: blackbox-ping
    metrics_path: /probe
    params:
      module:
        - icmp
    static_configs:
      - targets:
{% for host in monitoring_backend_icmp_ping_hosts_to_check %}
        - "{{ host }}"
{% endfor %}
{% for host in groups['all'] %}
        - "{{ host }}"
{% endfor %}
    relabel_configs:
      - source_labels: [__address__] # Add a target parameter of the scrape request URL
        target_label: __param_target
      - source_labels: [__param_target] # Set the instance label
        target_label: instance
      - target_label: __address__ # Set the scrape request address to point to the Blackbox exporter hostname:port
        replacement: blackbox-exporter:{{ monitoring_backend_prometheus_node_exporter_container_port }} # Blackbox exporter hostname:port

  - job_name: "restic"
    static_configs:
      - targets:
{% for host in groups['all'] %}
{% if hostvars[host].configure_backup_restic | default(false) %}
{% for backup_job in hostvars[host].restic_backup_jobs %}
        - "{{ host }}:{{ backup_job.restic_prometheus_exporter_port }}"
{% endfor %}
{% endif %}
{% endfor %}

{% if configure_monitoring_nut %}
  - job_name: ups
    static_configs:
      - targets:
{% for host in groups['all'] %}
{% if hostvars[host].configure_monitoring_nut | default(false) %}
        - "{{ host }}:{{ hostvars[host].monitoring_nut_exporter_port | default(monitoring_nut_exporter_port) }}"
{% endif %}
{% endfor %}
    metrics_path: /ups_metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_server
      - source_labels: [__param_server]
        target_label: instance
      - target_label: __address__
        replacement: nut-exporter.local:9199
{% endif %}
...
