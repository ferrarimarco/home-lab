---
mqtt:
  host: "{{ mosquitto_server_fqdn }}"
  port: 1883

detectors:
  coral:
    type: edgetpu
    device: usb

ffmpeg:
{% if frigate_ffmpeg_harware_acceleration_arguments is defined %}
  # Enable acceleration
{% if frigate_ffmpeg_harware_acceleration_arguments is iterable %}
{% for argument in frigate_ffmpeg_harware_acceleration_arguments %}
  hwaccel_args:
    - "{{ argument }}"
{% endfor %}
{% else %}
  hwaccel_args: {{ frigate_ffmpeg_harware_acceleration_arguments }}
{% endif %}
{% endif %}

# Configuration for recordings
record:
  enabled: true
  events:
    # Number of seconds after the event to include
    post_capture: 10
    # Number of seconds before the event to include
    pre_capture: 10
    retain:
      # Retention days
      default: 10

# Disable RTMP re-streaming to spare resources
rtmp:
  enabled: false

# Configuration for the snapshots written to the clips directory for each event
snapshots:
  bounding_box: true
  enabled: true
  retain:
    # Retention days
    default: 10

timestamp_style:
  format: "%Y-%m-%dT%H:%M:%S"
  # Position of the timestamp. "tl" (top left), "tr" (top right), "bl" (bottom left), "br" (bottom right)
  position: "tl"

cameras:
{% for frigate_camera in frigate_cameras %}
  {{ frigate_camera.name }}:
    ffmpeg:
      inputs:
{% for frigate_camera_input in frigate_camera.inputs %}
        - path: "{{ frigate_camera_input.path }}"
{% if frigate_camera_input.ffmpeg.input_args is defined %}
          input_args: "{{ frigate_camera_input.ffmpeg.input_args }}"
{% endif %}
          roles:
{% for role in frigate_camera_input.roles %}
            - {{ role }}
{% endfor %}
{% endfor %}
{% if frigate_camera.detect is defined %}
    detect:
      height: "{{ frigate_camera.detect.height }}"
      width: "{{ frigate_camera.detect.width }}"
{% endif %}
{% if frigate_camera.motion_masks is defined %}
    motion:
      mask:
{% for mask in frigate_camera.motion_masks %}
        - {{ mask }}
{% endfor %}
{% endif %}
{% endfor %}
...
