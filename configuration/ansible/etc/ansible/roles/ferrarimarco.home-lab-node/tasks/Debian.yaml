---
- name: Run Distribution-specific tasks
  include_tasks: "{{ ferrarimarco_home_lab_node_distro_item }}"
  vars:
    params:
      files:
        - |
          "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yaml"
  loop: "{{ q('first_found', params, errors='ignore') }}"
  loop_control:
    loop_var: ferrarimarco_home_lab_node_distro_item

- name: Ensure hostname is correct
  hostname:
    name: "{{inventory_hostname.split('.')[0]}}"

- name: Create the default administrative user
  user:
    name: ferrarimarco
    comment: "Marco Ferrari"
    # generated with mkpasswd --method=sha-512
    password: "$6$.d2as860Kt2/p6qm$81wkGEi3EEG6Sjz0vSWpQDAgsRNAtEHa4Uh9Iuxf43QT\
              VDIc3Tqhj2Rjvpn/24g62uwspOyE68KR/3nVM2laL0"
    shell: /bin/bash

- name: Make the administrative user member of the sudo group
  user:
    name: ferrarimarco
    groups:
      - sudo

- name: Ensure SSH keys are installed for the administrative user
  authorized_key: user=ferrarimarco key=https://github.com/{{ item }}.keys
  with_items:
    - ferrarimarco

- name: Remove pre-configured users
  user:
    name: "{{item}}"
    remove: true
    state: absent
  tags:
    - user_configuration
  with_items:
    - ubuntu
    - debian

- name: Configure SSH Daemon
  copy:
    src: etc/ssh/sshd_config
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: 0644
  notify: "restart_sshd"
  tags:
    - ssh_configuration

- name: Ensure required apt packages are installed
  apt:
    cache_valid_time: 3600
    pkg: ['curl', 'python3', 'python3-apt', 'wget']
    state: present
    update_cache: true
